name: CI/CD # 工作流的名称，显示在 GitHub Actions 页面上

on: # 定义工作流的触发条件
  push: # 当代码推送到以下分支时触发
    branches:
      - main # 或你的主分支名称，例如 develop
  pull_request: # 当有针对以下分支的拉取请求时触发
    branches:
      - main # 或你的主分支名称

jobs: # 定义工作流中的作业（一系列步骤）
  build: # 定义一个名为 "build" 的作业，用于构建
    name: Build # 作业的名称，显示在 GitHub Actions 页面上
    runs-on: ubuntu-latest # 指定运行作业的操作系统（Ubuntu 最新版本）
    environment: own

    steps: # 定义作业中的步骤（一系列命令）
      - name: Checkout code # 步骤的名称，显示在 GitHub Actions 页面上
        uses: actions/checkout@v2 # 使用 actions/checkout@v2 操作，检出代码到工作区

      - name: Set up Go # 步骤的名称
        uses: actions/setup-go@v2 # 使用 actions/setup-go@v2 操作，设置 Go 环境
        with: # 配置操作的参数
          go-version: '1.24.0' # 指定 Go 版本（或你的项目使用的版本）

      - name: Install dependencies # 步骤的名称
        run: go mod tidy # 运行 "go mod tidy" 命令，安装 Go 依赖

      - name: Build with Make # 步骤的名称
        run: make build-linux  # 运行 "make" 命令，执行 Makefile 文件中的构建规则

      - name: Archive build artifact
        run: |
          tar -zcvf  api.tar.gz ./mms_api
          pwd
          ls -l

      - name: Debug INFO
        run: |
          pwd
          ls -l

      - name: Transfer files to server # 步骤的名称
        uses: appleboy/scp-action@v0.1.6 # 使用 appleboy/scp-action@v0.1.6 操作，通过 SCP 传输文件到服务器
        with: # 配置操作的参数
          host: ${{ secrets.SERVER_HOST }} # 服务器的 IP 地址或域名，从 GitHub Secrets 中获取
          username: ${{ secrets.SERVER_USER }} # 服务器的用户名，从 GitHub Secrets 中获取
          password: ${{ secrets.SERVER_KEY }} # 服务器的 SSH 私钥，从 GitHub Secrets 中获取
          source: api.tar.gz
          target: /data/servers/truck_server/member/ # 替换为服务器上的目标路径

  deploy: # 定义一个名为 "deploy" 的作业，用于部署
    name: Deploy # 作业的名称
    needs: build # 指定部署作业依赖于构建作业，即构建作业成功后才会执行部署作业
    runs-on: ubuntu-latest # 指定运行作业的操作系统
    environment: own

    steps: # 定义作业中的步骤
      - name: Restart service # 步骤的名称
        uses: appleboy/ssh-action@v0.1.7 # 使用 appleboy/ssh-action@v0.1.7 操作，通过 SSH 在服务器上执行命令
        with: # 配置操作的参数
          host: ${{ secrets.SERVER_HOST }} # 服务器的 IP 地址或域名，从 GitHub Secrets 中获取
          username: ${{ secrets.SERVER_USER }} # 服务器的用户名，从 GitHub Secrets 中获取
          password: ${{ secrets.SERVER_KEY }} # 服务器的 SSH 私钥，从 GitHub Secrets 中获取
          script: | # 在服务器上执行的脚本
            cd /data/servers/truck_server/member/
            ls -l ./
            tar -zxvf api.tar.gz
            mv ./mms_api ./bin/api && ./service api restart # 替换为你的服务名称，重启服务
            rm -rf ./api.tar.gz
            ls -l ./